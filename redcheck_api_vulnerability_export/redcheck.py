import requests
import json


def get_token(username, password):
    data = json.dumps({"userName": username, "userPassword": password})
    headers = {
        'accept': 'text/plain',
        'Content-Type': 'application/json-patch+json',
    }

    response = requests.post(api_server + '/api/v1.0/accounts/token', headers=headers, data=data)
    return response.text


def get_hosts(token):
    headers = {
        'accept': 'text/plain',
        'Content-Type': 'application/json-patch+json',
        'Authorization': "Bearer " + token
    }
    page = 1
    all_host_items = list()
    response = requests.get(api_server + '/api/v1.0/targets/hosts?Paging.Page=' + str(page), headers=headers)
    items = response.json()['items']
    all_host_items += items
    while items != list():
        page += 1
        response = requests.get(api_server + '/api/v1.0/targets/hosts?Paging.Page=' + str(page), headers=headers)
        items = response.json()['items']
        all_host_items += items
    return all_host_items


def get_vulnerabilities_by_host(host_id, token):
    headers = {
        'accept': 'text/plain',
        'Content-Type': 'application/json-patch+json',
        'Authorization': "Bearer " + token
    }
    response = requests.get(api_server + '/api/v1.0/jobs/scans/last/targets/host/' + str(host_id) + '?Type=5',
                            headers=headers)
    return response.json()


api_server = "http://redcheck-server:8081"
redcheck_username = "user"
redcheck_password = "12345"
redcheck_token = get_token(redcheck_username, redcheck_password)

hosts = get_hosts(redcheck_token)
hosts_vulnerability_data = dict()

for host in hosts:
    host_scan_data = get_vulnerabilities_by_host(host['id'], redcheck_token)
    host_name = host['connectionAddress']
    hosts_vulnerability_data[host_name] = dict()
    if "Хост недоступен" in str(host_scan_data['message']):
        hosts_vulnerability_data[host_name]['error'] = True
    else:
        hosts_vulnerability_data[host_name]['error'] = False
        hosts_vulnerability_data[host_name]['start'] = host_scan_data['start']
        cves = set()
        for oval_definition in host_scan_data['ovalDefinitions']:
            if 'references' in oval_definition:
                for reference in oval_definition['references']:
                    if reference['type'] == 'CVE':
                        cves.add(reference['value'])
        hosts_vulnerability_data[host_name]['cves'] = cves

for host_name in hosts_vulnerability_data:
    if not hosts_vulnerability_data[host_name]['error']:
        print(host_name + ": " + str(len(hosts_vulnerability_data[host_name]['cves'])) +
              " (" + hosts_vulnerability_data[host_name]['start'] + ")")

'''Example of output:
172.12.11.101: 234 (2023-08-12T10:36:22.12344)
172.12.11.102: 223 (2023-08-13T11:22:11.12323)
...
'''
