import requests


def get_assets_data(api_key):
    headers = {
        'accept': 'application/json',
        'x-api-key': api_key
    }

    response = requests.get(api_server + '/integration/v1/assets', headers=headers, verify=False)
    return response.json()


def get_last_audit_for_asset_id(api_key, asset_id):
    headers = {
        'accept': 'application/json',
        'x-api-key': api_key
    }

    response = requests.get(api_server + '/integration/v1/audits?sortOrder=desc&limit=1&assetId=' + str(asset_id),
                            headers=headers, verify=False)
    return response.json()


api_server = "https://vulnsio-server:443"
# Токен выпускается в веб-интерфейсе в разделе "Настройки / API-токены".
vulnsio_api_key = "1234567890"


host_to_cves = dict()
assets_data = get_assets_data(vulnsio_api_key)
hosts_vulnerability_data = dict()

for asset in assets_data['data']:
    if asset['latestAudit']:
        host_name = asset['latestInventorization']['hostname']
        hosts_vulnerability_data[host_name] = dict()
        cves = set()
        audit_data = get_last_audit_for_asset_id(vulnsio_api_key, asset['assetId'])
        hosts_vulnerability_data[host_name]['start'] = asset['latestAudit']['createdAt']
        for vulnerable_object in audit_data["data"][0]['result']['vulnerableObjects']:
            for vuln in vulnerable_object['vulns']:
                if vuln['type'] == 'cve':
                    cves.add(vuln['id'])
        hosts_vulnerability_data[host_name]['cves'] = cves

for host_name in hosts_vulnerability_data:
    print(host_name + ": " + str(len(hosts_vulnerability_data[host_name]['cves'])) +
          " (" + hosts_vulnerability_data[host_name]['start'] + ")")

'''Example of output:
host1: 234 (2023-08-12T10:36:22.12344Z)
host2: 223 (2023-08-13T11:22:11.12323Z)
...
'''
